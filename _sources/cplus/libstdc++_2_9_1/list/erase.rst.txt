=============
erase
=============


syntax
-----------------

.. code-block:: c++

   iterator erase(iterator __position) {
       _List_node_base* __next_node = __position._M_node->_M_next;
       _List_node_base* __prev_node = __position._M_node->_M_prev;
       _Node* __n = (_Node*) __position._M_node;
       __prev_node->_M_next = __next_node;
       __next_node->_M_prev = __prev_node;
       _Destroy(&__n->_M_data);
       _M_put_node(__n);
       return iterator((_Node*) __next_node);
   }

   template <class _Tp, class _Alloc>
   typename list<_Tp,_Alloc>::iterator list<_Tp, _Alloc>::
   erase(iterator __first, iterator __last)
   {
        while (__first != __last)
            erase(__first++);
        return __last;
   }


.. image:: ../../../_static/image/list_erase.jpg
