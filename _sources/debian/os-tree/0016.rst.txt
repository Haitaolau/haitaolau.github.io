==============================
ostree-boot: grub2-15_ostree
==============================

.. contents:: Table of Content



grub2-15_ostree
===============



Purpose
-------


This is a script located in /etc/grub.d/ on OSTree-based systems. Its role is to integrate OSTree deployments with the GRUB2 bootloader


.. code-block::

   root@localhost:~# ls /etc/grub.d/15_ostree -lh
   lrwxrwxrwx 1 root root 38 May 29 08:21 /etc/grub.d/15_ostree -> /usr/libexec/libostree/grub2-15_ostree
   root@localhost:~#


How it functions
-----------------

GRUB2 uses scripts in /etc/grub.d/ (numbered, like 00_header, 10_linux, etc.) to generate its configuration file (/boot/grub/grub.cfg). 

The 15_ostree script is specifically designed to read the "BootLoaderSpec" (BLS) snippets generated by OSTree for each installed deployment

.. code-block::

   root@localhost:~# ls  /etc/grub.d/ -lh
   total 84K
   -rwxr-xr-x 1 root root 9.9K May 29 08:21 00_header
   -rwxr-xr-x 1 root root 6.2K May 29 08:21 05_debian_theme
   -rwxr-xr-x 1 root root  14K May 29 08:21 10_linux
   lrwxrwxrwx 1 root root   38 May 29 08:21 15_ostree -> /usr/libexec/libostree/grub2-15_ostree
   -rwxr-xr-x 1 root root  14K May 29 08:21 20_linux_xen
   -rwxr-xr-x 1 root root  13K May 29 08:21 30_os-prober
   -rwxr-xr-x 1 root root 1.4K May 29 08:21 30_uefi-firmware
   -rwxr-xr-x 1 root root  214 May 29 08:21 40_custom
   -rwxr-xr-x 1 root root  215 May 29 08:21 41_custom
   -rw-r--r-- 1 root root  483 May 29 08:21 README
   root@localhost:~#


Traditionally, grub.cfg contains all boot entries directly. With BLS, boot entries are separate files (snippets) that GRUB2 can read. 

15_ostree helps bridge the gap by parsing these OSTree BLS snippets and ensuring that GRUB2 can correctly present all available OSTree 

deployments (different OS versions) in its boot menu. This allows users to select which deployment to boot into, facilitating rollbacks


.. code-block:: 

   root@localhost:~# grub-mkconfig -o ./grub.cfg
   Generating grub configuration file ...
   Found background: /usr/share/grub/default/splash.png
   done




Output
------



.. code-block::

   root@localhost:~# cat grub.cfg
   #
   # DO NOT EDIT THIS FILE
   #
   # It is automatically generated by grub-mkconfig using templates
   # from /etc/grub.d and settings from /etc/default/grub
   #
   
   ### BEGIN /etc/grub.d/00_header ###
   if [ -s $prefix/grubenv ]; then
     set have_grubenv=true
     load_env
   fi
   if [ "${next_entry}" ] ; then
      set default="${next_entry}"
      set next_entry=
      save_env next_entry
      set boot_once=true
   else
      set default="1"
   fi
   
   if [ x"${feature_menuentry_id}" = xy ]; then
     menuentry_id_option="--id"
   else
     menuentry_id_option=""
   fi
   
   export menuentry_id_option
   
   if [ "${prev_saved_entry}" ]; then
     set saved_entry="${prev_saved_entry}"
     save_env saved_entry
     set prev_saved_entry=
     save_env prev_saved_entry
     set boot_once=true
   fi
   
   function savedefault {
     if [ -z "${boot_once}" ]; then
       saved_entry="${chosen}"
       save_env saved_entry
     fi
   }
   
   function load_video {
     if [ x$feature_all_video_module = xy ]; then
       insmod all_video
     else
       insmod efi_gop
       insmod efi_uga
       insmod ieee1275_fb
       insmod vbe
       insmod vga
       insmod video_bochs
       insmod video_cirrus
     fi
   }
   
   if [ x$feature_default_font_path = xy ] ; then
      font=unicode
   else
   insmod part_gpt
   insmod ext2
   search --no-floppy --fs-uuid --set=root dd5b8ce2-98c6-4920-93be-e9a0232cc9d0
       font="/ostree/deploy/elxr/deploy/e72cd6aa4f18d53fff989c5f55707e19f0f59e1ce33d3ba2c26a9e8b9fbf572c.0/usr/share/grub/unicode.pf2"
   fi
   
   if loadfont $font ; then
     set gfxmode=auto
     load_video
     insmod gfxterm
     set locale_dir=$prefix/locale
     set lang=C
     insmod gettext
   fi
   terminal_output gfxterm
   insmod part_gpt
   insmod ext2
   search --no-floppy --fs-uuid --set=root dd5b8ce2-98c6-4920-93be-e9a0232cc9d0
   insmod png
   background_image -m stretch /ostree/deploy/elxr/deploy/e72cd6aa4f18d53fff989c5f55707e19f0f59e1ce33d3ba2c26a9e8b9fbf572c.0/usr/share/grub/default/splash.png
   if [ "${recordfail}" = 1 ] ; then
     set timeout=30
   else
     if [ x$feature_timeout_style = xy ] ; then
       set timeout_style=menu
       set timeout=15
     # Fallback normal timeout code in case the timeout_style feature is
     # unavailable.
     else
       set timeout=15
     fi
   fi
   ### END /etc/grub.d/00_header ###
   ### BEGIN /etc/grub.d/05_debian_theme ###
   set menu_color_normal=cyan/blue
   set menu_color_highlight=white/blue
   ### END /etc/grub.d/05_debian_theme ###
   
   ### BEGIN /etc/grub.d/10_linux ###
   function gfxmode {
           set gfxpayload="${1}"
   }
   set linux_gfx_mode=
   export linux_gfx_mode
   
   ### END /etc/grub.d/10_linux ###
   
   ### BEGIN /etc/grub.d/15_ostree ###
   menuentry 'eLxr 12 (aria) (ostree:0)' --class gnu-linux --class gnu --class os --unrestricted 'ostree-0-451c9b32-79a2-48cf-8cd4-7b78eec881d9' {
   load_video
   set gfxpayload=keep
   insmod gzio
   insmod part_gpt
   insmod ext2
   search --no-floppy --fs-uuid --set=root 451c9b32-79a2-48cf-8cd4-7b78eec881d9
   linux /ostree/elxr-edb3e401f7adf2d2c452e9eade28a08e1923a01e67d3bb169a9d7c12e2a4d1ce/vmlinuz-6.1.0-32-imx-arm64 root=LABEL=ROOT rw console=tty0 ostree=/ostree/boot.1/elxr/edb3e401f7adf2d2c452e9eade28a08e1923a01e67d3bb169a9d7c12e2a4d1ce/0
   initrd /ostree/elxr-edb3e401f7adf2d2c452e9eade28a08e1923a01e67d3bb169a9d7c12e2a4d1ce/initramfs-6.1.0-32-imx-arm64.img
   }
   ### END /etc/grub.d/15_ostree ###
   
   ### BEGIN /etc/grub.d/20_linux_xen ###
   ### END /etc/grub.d/20_linux_xen ###
   
   ### BEGIN /etc/grub.d/30_os-prober ###
   ### END /etc/grub.d/30_os-prober ###
   
   ### BEGIN /etc/grub.d/30_uefi-firmware ###
   ### END /etc/grub.d/30_uefi-firmware ###
   
   ### BEGIN /etc/grub.d/40_custom ###
   # This file provides an easy way to add custom menu entries.  Simply type the
   # menu entries you want to add after this comment.  Be careful not to change
   # the 'exec tail' line above.
   ### END /etc/grub.d/40_custom ###
   
   ### BEGIN /etc/grub.d/41_custom ###
   if [ -f  ${config_directory}/custom.cfg ]; then
     source ${config_directory}/custom.cfg
   elif [ -z "${config_directory}" -a -f  $prefix/custom.cfg ]; then
     source $prefix/custom.cfg
   fi
   ### END /etc/grub.d/41_custom ###
   
   
