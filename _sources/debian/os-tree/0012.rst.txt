===========================================
systemd.generator - systemd unit generators
===========================================

.. contents:: Table of Contents


Looking at the debian man pages for systemd.generator

https://manpages.debian.org/testing/systemd/systemd.generator.7.en.html

Generators are small executables placed in /lib/systemd/system-generators/ and other directories listed [below].

systemd(1) will execute these binaries very early at bootup and at configuration reload time — before unit files are loaded.

The directories can be found in the man page but here are some persistent ones:

    * /etc/systemd/system-generators/*
    * /usr/local/lib/systemd/system-generators/*
    * /lib/systemd/system-generators/*
    * /etc/systemd/user-generators/*
    * /usr/local/lib/systemd/user-generators/*
    * /usr/lib/systemd/user-generators/*

We could also get these from the source code **systemd/src/basic/path-lookup.c**

.. code-block::

   790 char **generator_binary_paths(RuntimeScope scope) {
   791         bool append = false; /* Add items from SYSTEMD_GENERATOR_PATH before normal directories */
   792         _cleanup_strv_free_ char **paths = NULL;
   793         int r;
   794 
   795         /* First priority is whatever has been passed to us via env vars */
   796         r = get_paths_from_environ("SYSTEMD_GENERATOR_PATH", &paths, &append);
   797         if (r < 0)
   798                 return NULL;
   799 
   800         if (!paths || append) {
   801                 _cleanup_strv_free_ char **add = NULL;
   803                 switch (scope) {
   804 
   805                 case RUNTIME_SCOPE_SYSTEM:
   806                         add = strv_new("/run/systemd/system-generators",
   807                                        "/etc/systemd/system-generators",
   808                                        "/usr/local/lib/systemd/system-generators",
   809                                        SYSTEM_GENERATOR_DIR);
   810                         break;
   811 
   812                 case RUNTIME_SCOPE_GLOBAL:
   813                 case RUNTIME_SCOPE_USER:
   814                         add = strv_new("/run/systemd/user-generators",
   815                                        "/etc/systemd/user-generators",
   816                                        "/usr/local/lib/systemd/user-generators",
   817                                        USER_GENERATOR_DIR);
   818                         break;




**1. At Boot-up**

Systemd generator scripts are executed very early in the boot process, specifically by systemd (PID 1) itself.

They run before most unit files are loaded and processed.


 * When the systemd executable (which becomes PID 1) is started by the kernel, one of its very first tasks is to invoke all configured generator scripts

 * This happens immediately after the kernel has loaded the initramfs (if applicable) and handed control to the systemd process.

 * All generators are executed in parallel. They are designed to be fast and self-contained; they cannot rely on external services (like syslog or even other systemd services) as these won't be running yet. They can, however, rely on basic kernel functionality and mounted filesystems like /sys, /proc, /dev, /usr, and /run.


**2. At Configuration Reload Time (systemctl daemon-reload)**

 * Whenever systemd's configuration is reloaded (e.g., by running systemctl daemon-reload or after a

   system update that touches systemd unit files), the generators are invoked again.

 * This ensures that any dynamically generated unit files or dependencies are recreated based on the current system

   state or configuration. Units generated by generators are ephemeral and are removed when configuration is

   reloaded, so they need to be re-generated.





systemd-fstab-generator
=========================



systemd-fstab-generator is Unit generator for /etc/fstab which is located

at **/usr/lib/systemd/system-generators/systemd-fstab-generator**


sysroot.mount
-------------

The implementation relies on the 'add_sysroot_mount' function.

.. code-block::

   static int add_sysroot_mount(void) {
         _cleanup_free_ char *what = NULL;
         const char *opts, *fstype;
         bool default_rw, makefs;
         MountPointFlags flags;
         int r;

    ...
    ...
    ...
         log_debug("Found entry what=%s where=/sysroot type=%s opts=%s", what, strna(arg_root_fstype), strempty(opts));

         makefs = fstab_test_option(opts, "x-systemd.makefs\0");
         flags = makefs * MOUNT_MAKEFS;

         return add_mount("/proc/cmdline",
                          arg_dest,
                          what,
                          "/sysroot",
                          NULL,
                          fstype,
                          opts,
                          is_device_path(what) ? 1 : 0, /* passno */
                          flags,                        /* makefs off, pcrfs off, noauto off, nofail off, automount off */
                          SPECIAL_INITRD_ROOT_FS_TARGET);


.. code-block::

   sh-5.2# systemctl status sysroot.mount
   ● sysroot.mount - /sysroot
        Loaded: loaded (/proc/cmdline; generated)
        Active: active (mounted) since Mon 2025-06-09 03:17:21 UTC; 4h 27min ago
         Where: /sysroot
          What: /dev/vda3
          Docs: man:fstab(5)
                man:systemd-fstab-generator(8)
           CPU: 11ms
   sh-5.2# systemctl cat  sysroot.mount
   # /run/systemd/generator/sysroot.mount
   # Automatically generated by systemd-fstab-generator

   [Unit]
   Documentation=man:fstab(5) man:systemd-fstab-generator(8)
   SourcePath=/proc/cmdline
   Before=initrd-root-fs.target
   Requires=systemd-fsck-root.service
   After=systemd-fsck-root.service
   After=blockdev@dev-disk-by\x2dlabel-ROOT.target

   [Mount]
   What=/dev/disk/by-label/ROOT
   Where=/sysroot
   Options=rw
